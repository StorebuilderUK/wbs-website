---
export interface Props {
  title: string;
  price: string;
  period?: string;
  description: string;
  features: string[];
  isPopular?: boolean;
  ctaText?: string;
  ctaLink?: string;
}

const { 
  title, 
  price, 
  period = "per month", 
  description, 
  features, 
  isPopular = false,
  ctaText = "Get Started",
  ctaLink = "/contact"
} = Astro.props;
---

<div class={`relative bg-white rounded-lg shadow-lg overflow-hidden transform transition-all duration-300 hover:scale-105 ${isPopular ? 'ring-4 ring-orange-500' : ''}`}>
  {isPopular && (
    <div class="absolute top-0 right-0 bg-orange-500 text-white px-4 py-1 text-sm font-semibold">
      Most Popular
    </div>
  )}
  
  <div class="p-6">
    <h3 class="text-2xl font-bold text-gray-900 mb-2">{title}</h3>
    <div class="mb-4">
      <span class="text-4xl font-bold text-navy-900">{price}</span>
      <span class="text-gray-600 ml-2">{period}</span>
    </div>
    <p class="text-gray-700 mb-6">{description}</p>
    
    <ul class="space-y-3 mb-8">
      {features.map((feature) => (
        <li class="flex items-start">
          <svg class="w-5 h-5 text-green-500 mr-3 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <span class="text-gray-700">{feature}</span>
        </li>
      ))}
    </ul>
    
    <a 
      href={ctaLink} 
      class={`block w-full text-center py-3 px-6 rounded-md font-semibold transition-colors duration-200 ${
        isPopular 
          ? 'bg-orange-500 text-white hover:bg-orange-600' 
          : 'bg-navy-900 text-white hover:bg-navy-800'
      }`}
    >
      {ctaText}
    </a>
  </div>
</div>